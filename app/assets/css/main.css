@import './fonts';
@import "tailwindcss";
@import "@nuxt/ui";

:root {
	/* Background */
	--ui-bg: var(--color-neutral-50);

	@variant dark {
		--ui-bg: var(--color-neutral-950);
		/* --ui-primary: var(--color-primary-300) */
	}
}

@layer base {
	.ring {
		--tw-ring-color: var(--ui-border);
	}

	body {
		max-height: 100dvh;
		overflow: overlay;
	}
}

@theme {
	/* Breakpoints */
	--breakpoint-mobile: 0rem;
	--breakpoint-desktop: 64rem;

	/* Font family */
	--font-sans: 'Plus Jakarta Sans', 'Inter', 'Proxima Nova', 'ui-sans-serif', 'system-ui', 'sans-serif';
	--font-display: 'Khand', 'ui-sans-serif', 'system-ui', 'sans-serif';

	/* Font size */
	--text-10xl: 10rem;
	--text-11xl: 12rem;
	--text-12xl: 14rem;
	--text-13xl: 16rem;
	--text-14xl: 18rem;

	/* Animation */
	--animate-float: float 3s ease-in-out infinite;

	/* Shadow */
	--shadow-smooth: 
		340px 404px 200px 0px --alpha(var(--ui-color-neutral-950) / 0%), 
		200px 220px 160px 0px --alpha(var(--ui-color-neutral-950) / 4%), 
		80px 100px 120px 0px --alpha(var(--ui-color-neutral-950) / 8%), 
		20px 24px 72px 0px --alpha(var(--ui-color-neutral-950) / 10%);
}


@layer utilities {
	.text-stroke {
		-moz-text-stroke: var(--tw-text-stroke-width, 1px) var(--tw-text-stroke-color, var(--ui-text));
		-webkit-text-stroke: var(--tw-text-stroke-width, 1px) var(--tw-text-stroke-color, var(--ui-text));
		/* text-stroke: var(--tw-text-stroke-width, 1px) var(--tw-text-stroke-color, var(--ui-border)); */
	}
}

@utility text-stroke-* {
	--tw-text-stroke-width: --value('thin', 'thick', 'medium', 'unset');
	--tw-text-stroke-width: --value(integer, [integer])px;
	--tw-text-stroke-color: --value(--color-*, [--color-*], [color], 'currentColor', [*]);
}

@utility paint-order-* {
	paint-order: --value('stroke', 'fill', 'markers');
}

@utility d-* {
	display: --value('block', 'grid', 'flex', 'none' ,[*]);
}

@utility view-transition-name-* {
	view-transition-name: --value([*]);
}

@utility contain-* {
	contain: --value('none', 'size', 'layout', 'paint', 'strict');
}

@utility step-start-* {
	--step-start: --value(integer, [integer]);
	animation-timing-function: steps(--step-start, --step-position);
}

@utility step-position-* {
	--step-position: --value('jump-start', 'jump-end', 'jump-none', 'jump-both', 'start', 'end');
	animation-timing-function: steps(--step-start, --step-position);
}


/* @utility bg-elevated {
	background-color: color-mix(var(--bg-elevated), --modifier(ratio));
} */

@keyframes float {
	0%, 100% { transform: translateY(0) }
	50% { transform: translateY(-10px) }
}
